// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;

public class AutoLauncher
{
	private static AutoLauncher s_instance;
	
	private bool m_autoLaunch;
	
	public static AutoLauncher Instance ()
	{
		if (s_instance == null) {
			s_instance = new AutoLauncher ();
		}
		
		return s_instance;
	}
	
	private AutoLauncher ()
	{
		m_autoLaunch = false;
	}
	
	public bool AutoLaunch ()
	{
		return m_autoLaunch;
	}
	
	public void SetAutoLaunch (bool autoLaunch)
	{
		m_autoLaunch = autoLaunch;
	}
	
	public void ValidateAutoLauncher (string applicationState)
	{
		if (applicationState == null) {
			// undefined application state
			Debug.Log ("ValidateAutoLauncher - undefined application state");
			return;
		}
		
		if (applicationState.Equals("starting")) {
			// suggestion to launch the Propeller SDK after the application
			// has finished starting up

			// application startup will flow into the main menu

			// auto launch of the Propeller SDK will occur on the load of
			// the main menu
		} else if (applicationState.Equals("running")) {
			// suggestion to launch the Propeller SDK while the application
			// is currently running in the foreground

			// do nothing and require an explicit launch by the user
			return;
		} else if (applicationState.Equals("resuming")) {
			// suggestion to launch the Propeller SDK after the application
			// has finished resuming from the background

			// (re)load / transition to the main menu
			Application.LoadLevel("MainMenu");

			// auto launch of the Propeller SDK will occur on the load of
			// the main menu
		} else {
			Debug.Log ("ValidateAutoLauncher - unsupported application state: " + applicationState);
			// invalid application state
			return;
		}
		
		SetAutoLaunch (true);
	}
}